version: '3.3'
services:

  db:
    image: mysql
    #restart: always
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-uroot", "-ppassword"]
      interval: 60s
      timeout: 30s
      retries: 20
    environment:
      MYSQL_DATABASE: 'db-blog'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3337:3306'
    expose:
      # Opens port 3306 on the container
      - '3337'
      # Where our data will be persisted
    networks:
      - app_network

  backend:
    build:
      context: ../backend/
      dockerfile: ./.docker/Dockerfile
    depends_on:
      db: 
        condition: service_healthy
    working_dir: /var/www/app
    environment:
      APP_NAME: Desbelinato
      APP_DEBUG: 'true'
      APP_URL: https://${EXTERNAL_IP}:37443
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: db-blog
      DB_USERNAME: user
      DB_PASSWORD: password
      SANCTUM_STATEFUL_DOMAINS: ${EXTERNAL_IP}:37443
    #network_mode: "host"
    volumes:
      - ../backend:/var/www/app
    networks:
      - app_network


  frontend:
    build:
      context: ../frontend/
      dockerfile: ./.docker/Dockerfile
    command: tail -F anything
    working_dir: /var/www/html
    #network_mode: "host"
    volumes:
      - ../frontend:/var/www/html
    networks:
      - app_network

    
  webserver:
    image: nginx:alpine
    container_name: webserver
    # restart: unless-stopped
    # tty: true
    depends_on:
      - backend
      - frontend
    ports:
      - "37080:80"
      - "37443:443"
    volumes:
      - ../backend/:/var/www/app
      - ../frontend/:/var/www/html
      - ../nginx/conf.d/:/etc/nginx/conf.d/
      - ../nginx/certificate/:/etc/nginx/certificate/
    networks:
      - app_network

# Docker Networks
networks:
  app_network:
    driver: bridge